* {
  --button-height: 40px;
  --body-background-color: #eeeeee;
  --body-background-color-half-opaque: #eeeeee80;
  --card-border-radius: 2em;
  --box-shadow-light: 0 5px 4px rgba(100, 100, 100, 0.1);
  --box-shadow-strong: 0 5px 4px rgba(100, 100, 100, 0.3);
  --padding-card: 22px;
  --padding-x-body: 3vw;
  --padding-y-body: min(1dvh, 20px);
}

body {
  background-color: var(--body-background-color);
  font-family: system-ui, Arial, Helvetica, sans-serif;
  padding: var(--padding-y-body) var(--padding-x-body);
  height: calc(100dvh - var(--button-height));
  display: flex; 
  flex-direction: column; 
  max-width: 40em;
  margin: auto;
  box-sizing: border-box;
}

h1 {
  color: darkblue;
  margin: 10px;
}

h4 {
  margin: 5px 0;
}

a {
  text-decoration: none;
  color: darkblue;
}

p {
  margin: 5px 0 0 0;
}

button, input[type="submit"] {
  background-color: aliceblue;
  color: darkblue;
  border-color: aliceblue;
  height: var(--button-height);
  line-height: 34px;
  margin-top: 10px;
  border-radius: 1em;
  box-shadow: var(--box-shadow-strong); /* Downwards shadow and on left and right side*/
  font-weight: bold;
  letter-spacing: 0.7px;
}

button:disabled, input[type="submit"]:disabled {
  opacity: 60%;
}

textarea {
  width: 95%;
  margin-bottom: 10px;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 5px;
  resize: vertical;
}

input[type="text"], input[type="email"], input[type="password"] {
  margin-bottom: 10px;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

hr { /* necessary to avoid corruption in flex-columns*/
  width: 100%;
}

div[contenteditable] {
  width: 100%;
  overflow-wrap: anywhere;
  min-height: var(--button-height);
  border-radius: 20px;
  background-color: aliceblue;
  max-height: calc(2.5*var(--button-height));
  box-sizing: border-box;
  padding: 10px calc(var(--button-height) + 8px);
  overflow: auto;
  box-shadow: var(--box-shadow-light); /* Downwards shadow and on left and right side*/
  line-height: 1.3em;
}

div[contenteditable] + button, div[contenteditable] + button + button {
  box-shadow: none;
}

div[contenteditable]::-webkit-scrollbar {
  display: none;
}

div[contenteditable]:empty::before {
  content: attr(data-placeholder);
  color: #999;
  pointer-events: none;
}

div[contenteditable]:focus {
  outline-color: blue;
}

ul {
  padding-inline-start: 1.5em;
}

label {
  width: 50%;
  flex-grow: 1;
  text-align: justify;
}

/* Base styles for the checkbox */
input[type="checkbox"] {
  -webkit-appearance: none; /* Remove default checkbox style */
  -moz-appearance: none;
  appearance: none;
  width: 50px; /* Width of the toggle */
  height: 24px; /* Height of the toggle */
  background-color: #ccc; /* Background color when unchecked */
  border-radius: 50px; /* Make it round */
  position: relative;
  outline: none;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-right: 0.5em;
}

/* The circle inside the toggle */
input[type="checkbox"]::before {
  content: "";
  position: absolute;
  width: 20px; /* Circle width */
  height: 20px; /* Circle height */
  border-radius: 50%;
  background-color: white;
  top: 2px;
  left: 2px;
  transition: transform 0.3s ease;
}

/* Checked state styles */
input[type="checkbox"]:checked {
  background-color: darkblue; /* Background color when checked */
}

/* Move the circle to the right when checked */
input[type="checkbox"]:checked::before {
  transform: translateX(26px);
}

div:has(> input[type="checkbox"]) {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.card, .image-card {
  padding: var(--padding-card) !important;
  background-color: aliceblue;
  border-radius: var(--card-border-radius);
  margin: 5px 0;
  box-shadow: var(--box-shadow-strong); /* Downwards shadow and on left and right side*/
}

.card > *:first-child, .card > *:first-child > *:first-child {
  margin-top: 0;
  line-height: 1em;
}

.pointer {
  cursor: pointer;
}

.clicked {
  color: red;
}

.grammar-marked {
  color: darkblue;
}

.srWord {
  color: indigo;
}

.two-columns {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: stretch;
}

.two-columns > * {
    width: 50%;
    box-sizing: border-box;
    padding: 5px;
    display: flex;
}

.two-columns .card {
  flex: 1;
  display: flex;
  align-items: center; /* Center content vertically */
  justify-content: center; /* Center content horizontally */
  text-align: center; /* Center text */
}

.chat-circle-btn {
    border-radius: 20px;
    width: var(--button-height);
}
   
#chatInputContainer .chat-circle-btn {
    position: absolute;
    bottom: 1px;
    height: calc(100% - 2px);
}

.image-card img {
margin-top: calc(-1 * var(--padding-card));
margin-left: calc(-1 * var(--padding-card));
margin-bottom: calc(0.5 * var(--padding-card));
width: calc(100% + 2 * var(--padding-card));
border-radius: var(--card-border-radius) var(--card-border-radius) 0 0;
}

.difficulty-badge {
    position: absolute;
    bottom: 1.5em;
    z-index: 1;
}

.flash {
  animation: glowing 1300ms;
}

.flash.delayed {
  animation: glowing-delayed 30000ms;
}

.background-orange {background-color: orange;}
.background-lightgreen {background-color: lightgreen;}
.background-lightblue {background-color: lightblue;}

#divTask, #solutionField {
  padding: 0 0.2em;
  line-height: 1.8em;
  flex-grow: 1.618;
  height: 0px; /* just need to have a value for flex-grow to work */
  overflow-y: scroll;
  overflow-x: hidden;
}

button.highlighted, input[type="submit"].highlighted, button.flash, input[type="submit"].flash {
  background-color: darkblue;
  color: aliceblue;
}

#divTask::-webkit-scrollbar, #solutionField::-webkit-scrollbar {
  display: none;
}

#solutionField {
  opacity: 50%;
  flex-grow: 1;
}

#answbtn, .gameNavBtn, input[type="submit"] {
  margin: 5px auto;
  padding: 0 1em;
  outline: none;
  background-color: aliceblue;
  color: darkblue;
  height: fit-content;
  line-height: 45px;
  font-size: large;
  font-weight: bold;
}

#contentbox {
  text-align: justify;
  height: 100%; /* due to use of flex-grow by children, height of this element does not matter, as long as it is big enough it will be equivalent to fill-available */
  display: flex; 
  flex-direction: column; 
}

#toast {
  min-width: 250px;
  width: 80vw;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 10px;
  padding: 15px;
  box-sizing: border-box;
  position: fixed;
  z-index: 1;
  left: 10vw;
  bottom: 30px;
  font-size: 17px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 15px;
}
#toast[hidden] {
  display: none;
}
#toast > p {
  flex: 1;
}
#toast > button {
  opacity: 0.5;
  color: #333;
}

#iRating {
  height: 40px;
  width: 67%;
  transform: scaleX(1.5) scaleY(2);
}

#navbar {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    display: flex;
}

#navbar > button {
  width: 100px;
  border-radius: 5px;
  flex-grow: 1;
}

#navbar > button:first-child {
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
}

#navbar > button:last-child {
  border-top-right-radius: 20px;
  border-bottom-right-radius: 20px;
}


#messageHistoryContainer p:first-of-type { /* First one is next to Badge, thus needs to be inline*/
  display: inline;
}

.hidden {
  visibility: hidden;
}

/* Loading indicator */
.loading {
  visibility: hidden;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loading:after {
  content: " ";
  display: block;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  /* Optional alternative centering without transform */
  inset: 0;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 2px solid blue;
  border-color: lightskyblue transparent lightskyblue transparent;
  border-style: dotted;
  animation: loading-indicator 1.2s linear infinite;
  visibility: visible;
  margin: auto;
}

@keyframes loading-indicator {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes glowing {
  0% {
    background-color: darkblue;
    box-shadow: 0 0 3px darkblue;
  }
  20% {
    background-color: darkblue;
    box-shadow: 0 0 20px darkblue;
  }
  100% {
    background-color: darkblue;
    box-shadow: 0 0 3px darkblue;
  }
}
@keyframes glowing-delayed {
  0% {
    background-color: aliceblue;
    box-shadow: 0 0 3px aliceblue;
  }
  90% {
    background-color: aliceblue;
    box-shadow: 0 0 3px aliceblue;
  }
  91% {
    background-color: darkblue;
    box-shadow: 0 0 3px darkblue;
  }
  93% {
    background-color: darkblue;
    box-shadow: 0 0 20px darkblue;
  }
  100% {
    background-color: darkblue;
    box-shadow: 0 0 3px darkblue;
  }
}


/* Changes for Tiny mobile (Iphone SE) */
@media only screen and (max-width: 400px) {
  #answbtn, .gameNavBtn, input[type="submit"] {
    font-size: medium;
  }

  h2, h3 {
    font-size: medium;
  }

  * {
    --padding-card: 18px;
  }
}

/* Changes for Mobile*/
@media only screen and (max-width: 767px) {

  h1, h4 {
    font-size: small;
  }

  h3 {
    margin: 0.5em 0;
  }

  #divTask {
    font-size: large;
  }
}


/* Changes for PC*/
@media only screen and (min-width: 768px) {
  * {
    --padding-card: 30px;
  }

  #divTask, #solutionField {
    padding: 0 0.5em;
  }
}